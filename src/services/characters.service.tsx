// Generated by https://quicktype.io

import { CharactersById, ResponseDataCharactersById } from "@/models/personaje";
import graphqlBase from "./graphql.service";

export interface ResponseCharctersIdsOnlyImg {
    data: Data;
}

export interface Data {
    charactersByIds: CharactersOnlyImg[];
}

export interface CharactersOnlyImg {
    id:    string;
    image: string;
}

export interface CharactersMemoryGame {
    id:    string;
    image: string;
    pairedUp : boolean
}

// Generated by https://quicktype.io

export interface CharacterTotalResponse {
    data: Data;
}

export interface Data {
    characters: Characters;
}

export interface Characters {
    info: Info;
}

export interface Info {
    count: number;
}



export const charactersTotales = async() => {
    const query = `
        query{
            characters{
                info{
                    count
                }
        }
      }
    `;
    const { data } = await graphqlBase.post<CharacterTotalResponse>('', {
        method    : "POST",
        query      :  query 
    })
    return data.data.characters.info.count;
}

export const charactersByIdsImg = async(arrIds : number[]) => {

    let query = `
        query{
            charactersByIds(ids:[${arrIds}]){
                id
                image
            }
        }
    `


    const resp = await graphqlBase.post<ResponseCharctersIdsOnlyImg>('', {
        method    : "POST",
        query      :  query 
    })

   
    
    return resp.data.data.charactersByIds
}


export const charactersByIds = async(arrIds : string[]): Promise<CharactersById[]> => {

    let query = `
        query {
            charactersByIds(ids:[${arrIds}]){
            id
            image
            name
            status
            origin {
            id
            name
            }
            location {
            id
            name
            }
            
        }
        
        }
    `


    const resp = await graphqlBase.post<ResponseDataCharactersById>('', {
        method    : "POST",
        query      :  query 
    })

 
    
    return resp.data.data.charactersByIds
}
